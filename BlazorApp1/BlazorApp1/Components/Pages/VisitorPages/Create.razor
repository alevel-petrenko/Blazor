@page "/visitors/create"

@using Microsoft.EntityFrameworkCore
@using AppDatabase.Models
@inject IDbContextFactory<AppDatabase.Data.BlazorAppContext> DbFactory
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Visitor</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Visitor" OnValidSubmit="AddVisitor" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Visitor.Name" class="form-control" /> 
                <ValidationMessage For="() => Visitor.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="surname" class="form-label">Surname:</label> 
                <InputText id="surname" @bind-Value="Visitor.Surname" class="form-control" /> 
                <ValidationMessage For="() => Visitor.Surname" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="birthday" class="form-label">Birthday:</label> 
                <InputDate id="birthday" @bind-Value="Visitor.Birthday" class="form-control" />
                <ValidationMessage For="() => Visitor.Birthday" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/visitors">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm(FormName = "create")]
    public Visitor Visitor { get; set; } = new()
        {
            Birthday = DateTime.Today
        };

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddVisitor()
    {
        using var context = DbFactory.CreateDbContext();
        context.Visitor.Add(Visitor);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/visitors");
    }
}
